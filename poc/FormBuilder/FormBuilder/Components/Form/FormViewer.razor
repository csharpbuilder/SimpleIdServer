@using global::FormBuilder.Models
@inject IEnumerable<IFormElementDefinition> definitions

@if(Form.Elements != null)
{
    @CustomRender
}

@code {
    private RenderFragment? CustomRender { get; set; }
    [Parameter] public FormRecord Form { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if(Form != null)
        {
            CustomRender = CreateComponent();
        }
    }

    private RenderFragment CreateComponent() => builder =>
    {
        foreach (var record in Form.Elements)
        {
            var expectedType = record.GetType();
            var definition = definitions.Single(d => d.RecordType == expectedType);
            var uiElt = definition.UiElt;
            builder.OpenComponent(0, uiElt);
            builder.AddAttribute(1, "Value", record);
            builder.CloseComponent();
        }
    };
}