@using FormBuilder.Models
@typeparam TDialog where TDialog : ComponentBase
@typeparam TRecord where TRecord : IFormElementRecord
@inject DialogService dialogService

<div class="editableLayoutContainer">
    <div class="toolbox">
        <ul>
            <li><RadzenButton Icon="settings" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.ExtraSmall" Click="(async (e) => await HandleViewSettings())" /></li>
            <li><RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.ExtraSmall" Click="@HandleRemove" /></li>
        </ul>
    </div>
    @Children
</div>

@code {
    [Parameter] public RenderFragment Children { get; set; }
    [Parameter] public ParentEltContext ParentContext { get; set; }
    [Parameter] public TRecord Record { get; set; }

    private async Task HandleViewSettings()
    {
        var dic = new Dictionary<string, object>
        {
            { "Record", Record }
        };
        await dialogService.OpenAsync<TDialog>(string.Empty, dic);
    }

    private void HandleRemove()
    {
        var elt = ParentContext.Elements[ParentContext.Index];
        ParentContext.Elements.Remove(elt);
    }
}