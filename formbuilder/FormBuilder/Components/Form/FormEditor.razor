@using FormBuilder.Dialogs
@using FormBuilder.Models
@using System.Text.Json.Nodes
@using System.Text.Json
@inject DialogService dialogService
@inject IEnumerable<IFormElementDefinition> definitions

<RadzenDialog />

<div class="container">
    <RadzenRow>
        <RadzenColumn Size="1">
            <RadzenStack class="formEditorWindow">
                <div class="category">
                    <RadzenText TextStyle="TextStyle.H6" class="title">Elements</RadzenText>
                    <ul class="elements">
                        @foreach (var def in definitions.Where(d => d.Category == ElementDefinitionCategories.ELEMENT))
                        {
                            <li draggable="true" @ondragstart="@(() => HandleDragStart(def))">@def.Type</li>
                        }
                    </ul>
                </div>
                <div class="category">
                    <RadzenText TextStyle="TextStyle.H6" class="title">Layout</RadzenText>
                    <ul class="elements">
                        @foreach (var def in definitions.Where(d => d.Category == ElementDefinitionCategories.LAYOUT))
                        {
                            <li>@def.Type</li>
                        }
                    </ul>
                </div>
                <div class="category">
                    <RadzenText TextStyle="TextStyle.H6" class="title">Data</RadzenText>
                    <ul class="elements">
                        @foreach (var def in definitions.Where(d => d.Category == ElementDefinitionCategories.DATA))
                        {
                            <li>@def.Type</li>
                        }
                    </ul>
                </div>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="8">
            <FormViewer Form="@Form" Input="@(new JsonObject())" IsEditModeEnabled="true" Context="@Context" />
        </RadzenColumn>
        <RadzenColumn Size="3">
            <RadzenStack class="formEditorWindow">
                <div class="category">
                    <RadzenText TextStyle="TextStyle.H6" class="title">Debugger</RadzenText>
                    <div class="container">                        
                        <RadzenButton Icon="play_arrow" Text="Debug" Click="@(async () => await LaunchDebug())" />
                        <RadzenButton Icon="draft" Text="Json" Click="@(async() => await ViewJson())" />
                    </div>
                </div>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
</div>

@code {
    [Parameter] public FormRecord Form { get; set; }
    FormViewerContext Context { get; set; } = new FormViewerContext();

    private void HandleDragStart(IFormElementDefinition def)
    {
        Context.Set(def);
    }

    private Task LaunchDebug()
    {
        return dialogService.OpenAsync<DebugFormDialog>("", new Dictionary<string, object>
        {
            { "Form", Form }
        });
    }

    private Task ViewJson()
    {
        var json = JsonSerializer.Serialize(Form);
        return dialogService.OpenAsync<ViewJsonDialog>("", new Dictionary<string, object>
        {
            { nameof(ViewJsonDialog.Json), json }
        });
    }
}