@using FormBuilder.Components.Workflow
@using FormBuilder.Models
@using FormBuilder.Services
@inject IJSRuntime jsRuntime
@inject IFormBuilderJsService formBuilderJsService
@typeparam TRecord where TRecord : IFormElementRecord

@if (IsInteractableElementEnabled)
{
    <div class="interactableElement" draggable="true" @ondragstart="@(() => HandleDragStart())" @ref="@interactableElement">
        <div class="zone"></div>
        @Children
    </div>
}
else
{
    @Children
}

@code {
    private ElementReference interactableElement;
    private Coordinate interactableElementPosition;
    private Size interactableElementSize;
    [Parameter] public RenderFragment Children { get; set; }
    [Parameter] public WorkflowContext Context { get; set; }
    [Parameter] public TRecord Record { get; set; }
    [Parameter] public bool IsInteractableElementEnabled { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    private async void HandleDragStart()
    {
        Context.WorkflowEditorContext.StartDragElt(interactableElement, Record);
    }
}