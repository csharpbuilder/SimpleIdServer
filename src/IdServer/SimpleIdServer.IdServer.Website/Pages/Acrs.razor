@page "/acrs/{action}"
@using SimpleIdServer.IdServer.Website.Resources
@inject IUrlHelper urlHelper
@inject NavigationManager navigationManager

<SidAuthorizeView Roles=@("/acrs/manage,/acrs/view")>
    <Authorized>
        <RadzenBreadCrumb>
            <RadzenBreadCrumbItem Path="@urlHelper.GetUrl($"/acrs/{action}")" Text="@Global.AcrsTitle" />
        </RadzenBreadCrumb>

        <RadzenText class="mt-3 mb-3 no-margin" Text="@Global.AcrsTitle" TextStyle="TextStyle.DisplayH3" />
        
        <RadzenCard>
            <RadzenTabs Change=@OnChange @bind-SelectedIndex="selectedIndex">
                <Tabs>
                    <RadzenTabsItem Text="@Global.AcrsTitle">
                        <AcrList></AcrList>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="@Global.Forms">
                        <AuthForms></AuthForms>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
        </RadzenCard>
    </Authorized>
    <NotAuthorized>
        @Global.NotAuthorized
    </NotAuthorized>
</SidAuthorizeView>

@code {
    Dictionary<string, int> mappingActionNameToIndex = new Dictionary<string, int>
    {
        { "list", 0 },
        { "forms", 1 }
    };
    int selectedIndex = 0;
    [Parameter]
    public string? action { get; set; } = null;


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (!string.IsNullOrWhiteSpace(action) && mappingActionNameToIndex.ContainsKey(action))
            selectedIndex = mappingActionNameToIndex[action];
    }

    void OnChange(int index)
    {
        var rec = mappingActionNameToIndex.Single(kvp => kvp.Value == index);
        navigationManager.NavigateTo(urlHelper.GetUrl($"/acrs/{rec.Key}"));
    }
}