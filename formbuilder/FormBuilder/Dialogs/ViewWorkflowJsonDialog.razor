@using BlazorMonaco.Editor
@using FormBuilder.Components
@using FormBuilder.Models
@using Radzen
@using Radzen.Blazor
@using System.Text.Json
@inject DialogService dialogService

<RadzenStack>    
    <RadzenText>JSON</RadzenText>
    <StandaloneCodeEditor OnDidInit="HandleOnDidInit" Id="my-editor-instance-id" @ref="editor" ConstructionOptions="EditorConstructionOptions" CssClass="jsonEditor" />
    <RadzenButton Text="Update" Click="@(async() => await HandleUpdate())"></RadzenButton>
</RadzenStack>

@code {
    [Parameter] public WorkflowContext Context { get; set; }
    private StandaloneCodeEditor editor;

    private async Task HandleOnDidInit()
    {
        var json = JsonSerializer.Serialize(Context.Definition.Workflow, new JsonSerializerOptions { WriteIndented = true });
        await editor.SetValue(json);
    }

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "json",
            Value = "{}"
        };
    }

    private async Task HandleUpdate()
    {
        var json = await editor.GetValue();
        dialogService.Close(json);
    }
}
